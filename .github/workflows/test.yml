name: Test Build

on:
  pull_request:
    branches: [ main ]

jobs:
  test-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          push: false
          tags: obfuskit:test-${{ matrix.platform }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image
        run: |
          # Test basic functionality
          docker run --rm obfuskit:test-${{ matrix.platform }} \
            ./obfuskit -version
          
          # Test help command
          docker run --rm obfuskit:test-${{ matrix.platform }} \
            ./obfuskit -help | head -5
          
          # Test payload generation
          docker run --rm obfuskit:test-${{ matrix.platform }} \
            ./obfuskit -attack xss -payload '<script>alert(1)</script>' -limit 3
          
          # Test AI functionality (if API key is available)
          if [ -n "${{ secrets.OPENAI_API_KEY }}" ]; then
            docker run --rm \
              -e OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
              obfuskit:test-${{ matrix.platform }} \
              ./obfuskit -attack xss -payload '<script>alert(1)</script>' \
              -ai -ai-provider openai -ai-count 1
          fi

  # Additional job for Go testing
  test-go:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.21, 1.22]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Build ObfusKit
        run: go build -o obfuskit

      - name: Test ObfusKit
        run: |
          ./obfuskit -version
          ./obfuskit -help | head -5
          ./obfuskit -attack xss -payload '<script>alert(1)</script>' -limit 3

      - name: Run Go tests
        run: go test ./...

  # Security scanning
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
