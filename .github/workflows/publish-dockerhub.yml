# name: Publish to Docker Hub

# on:
#   push:
#     branches: [ main ]
#     tags: [ 'v*' ]

# env:
#   REGISTRY: docker.io
#   IMAGE_NAME: piyushroshan/obfuskit  # Change this to your Docker Hub username/repo

# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: read
#       packages: write

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Extract metadata
#         id: meta
#         uses: docker/metadata-action@v5
#         with:
#           images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#           tags: |
#             type=ref,event=branch
#             type=semver,pattern={{version}}
#             type=semver,pattern={{major}}.{{minor}}
#             type=semver,pattern={{major}}
#             type=raw,value=latest,enable={{is_default_branch}}
#             type=sha,prefix={{branch}}-

#       - name: Build and push Docker image
#         uses: docker/build-push-action@v5
#         with:
#           context: .
#           platforms: linux/amd64,linux/arm64
#           push: true
#           tags: ${{ steps.meta.outputs.tags }}
#           labels: ${{ steps.meta.outputs.labels }}
#           cache-from: type=gha
#           cache-to: type=gha,mode=max

#   # Test the published images
#   test-published:
#     needs: build-and-push
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         platform: [linux/amd64, linux/arm64]

#     steps:
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Test published image
#         run: |
#           # Pull the latest image for the current platform
#           docker pull --platform ${{ matrix.platform }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          
#           # Test basic functionality
#           docker run --rm --platform ${{ matrix.platform }} \
#             ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
#             ./obfuskit -version
          
#           # Test help command
#           docker run --rm --platform ${{ matrix.platform }} \
#             ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
#             ./obfuskit -help | head -5
          
#           # Test payload generation
#           docker run --rm --platform ${{ matrix.platform }} \
#             ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
#             ./obfuskit -attack xss -payload '<script>alert(1)</script>' -limit 3

#   # Update Docker Hub description
#   update-description:
#     needs: build-and-push
#     runs-on: ubuntu-latest
#     if: startsWith(github.ref, 'refs/tags/')

#     steps:
#       - name: Update Docker Hub description
#         uses: actions/github-script@v7
#         with:
#           script: |
#             const tag = context.ref.replace('refs/tags/', '');
            
#             const description = `# ObfusKit - Enterprise WAF Testing Platform
            
#             ## üöÄ Quick Start
            
#             \`\`\`bash
#             # Pull the image
#             docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${tag}
            
#             # Run basic test
#             docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${tag} \\
#               ./obfuskit -attack xss -payload '<script>alert(1)</script>'
            
#             # Run with volume mounting
#             docker run --rm \\
#               -v \$(pwd)/output:/app/output \\
#               ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${tag} \\
#               ./obfuskit -attack xss -payload '<script>alert(1)</script>' \\
#               -output /app/output/results.json
#             \`\`\`
            
#             ## üê≥ WAF Testing Environment
            
#             \`\`\`bash
#             # Clone and run with docker-compose
#             git clone https://github.com/${{ github.repository }}.git
#             cd obfuskit
#             docker-compose up -d
            
#             # Test against WAF
#             ./obfuskit -attack xss -payload '<script>alert(1)</script>' \\
#               -url http://localhost:8888/echo
#             \`\`\`
            
#             ## üèóÔ∏è Architecture Support
            
#             - **AMD64**: \`linux/amd64\`
#             - **ARM64**: \`linux/arm64\`
            
#             ## üìã Features
            
#             - Multi-attack testing (XSS, SQLi, Command Injection, etc.)
#             - Advanced evasion techniques
#             - AI-powered payload generation
#             - WAF fingerprinting and adaptive evasion
#             - Comprehensive reporting
#             - Docker and Kubernetes support
            
#             ## üìñ Documentation
            
#             Full documentation available at: https://github.com/${{ github.repository }}
            
#             ## üîó Links
            
#             - **GitHub**: https://github.com/${{ github.repository }}
#             - **Issues**: https://github.com/${{ github.repository }}/issues
#             - **Releases**: https://github.com/${{ github.repository }}/releases
#             `;
            
#             // Note: Docker Hub API requires authentication and has rate limits
#             // This is a placeholder for the description update
#             console.log('Docker Hub description would be updated with:', description);
#             console.log('To update Docker Hub description, use the Docker Hub web interface or API');
